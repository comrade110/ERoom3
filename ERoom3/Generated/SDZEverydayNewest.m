/*
	SDZEverydayNewest.h
	The implementation of properties and methods for the SDZEverydayNewest object.
	Generated by SudzC.com
*/
#import "SDZEverydayNewest.h"

@implementation SDZEverydayNewest
	@synthesize date = _date;
	@synthesize desc = _desc;
	@synthesize iconImageRef = _iconImageRef;
	@synthesize _id = __id;
	@synthesize name = _name;
	@synthesize type = _type;
	@synthesize videoRef = _videoRef;

	- (id) init
	{
		if(self = [super init])
		{
			self.date = nil;
			self.desc = nil;
			self.iconImageRef = nil;
			self.name = nil;
			self.videoRef = nil;

		}
		return self;
	}

	+ (SDZEverydayNewest*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (SDZEverydayNewest*)[[SDZEverydayNewest alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.date = [Soap getNodeValue: node withName: @"date"];
			self.desc = [Soap getNodeValue: node withName: @"desc"];
			self.iconImageRef = [Soap getNodeValue: node withName: @"iconImageRef"];
			self._id = [[Soap getNodeValue: node withName: @"id"] longLongValue];
			self.name = [Soap getNodeValue: node withName: @"name"];
			self.type = [[Soap getNodeValue: node withName: @"type"] intValue];
			self.videoRef = [Soap getNodeValue: node withName: @"videoRef"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"EverydayNewest"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.date != nil) [s appendFormat: @"<date>%@</date>", [[self.date stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.desc != nil) [s appendFormat: @"<desc>%@</desc>", [[self.desc stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.iconImageRef != nil) [s appendFormat: @"<iconImageRef>%@</iconImageRef>", [[self.iconImageRef stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<id>%@</id>", [NSString stringWithFormat: @"%ld", self._id]];
		if (self.name != nil) [s appendFormat: @"<name>%@</name>", [[self.name stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<type>%@</type>", [NSString stringWithFormat: @"%i", self.type]];
		if (self.videoRef != nil) [s appendFormat: @"<videoRef>%@</videoRef>", [[self.videoRef stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[SDZEverydayNewest class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
